apiVersion: apps/v1
kind: Deployment
metadata: 
  generation: 1
  labels: 
    app: test-ingress
  name: test-ingress
  namespace: default
spec: 
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector: 
    matchLabels: 
      app: test-ingress
  strategy: 
    rollingUpdate: 
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template: 
    metadata: 
      labels: 
        app: test-ingress
    spec: 
      containers: 
      - image: nginx:latest
        imagePullPolicy: Always
        name: nginx
        ports: 
        - containerPort: 80
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata: 
  labels: 
    app: test-nginx
  name: test-nginx
  namespace: default
spec: 
  clusterIP: 10.0.97.214
  clusterIPs: 
  - 10.0.97.214
  internalTrafficPolicy: Cluster
  ipFamilies: 
  - IPv4
  ipFamilyPolicy: SingleStack
  ports: 
  - name: "80"
    port: 80
    protocol: TCP
    targetPort: 80
  selector: 
    app: test-ingress
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata: 
  annotations: 
    cert-manager.io/cluster-issuer: staging-telematicsplatform-tools
  generation: 2
  name: test
  namespace: default
spec: 
  ingressClassName: nginx
  rules: 
  - host: cflor.staging.telematicsplatform.tools
    http: 
      paths: 
      - backend: 
          service: 
            name: test-nginx
            port: 
              number: 80
        path: /
        pathType: Prefix
  tls: 
  - hosts: 
    - cflor.staging.telematicsplatform.tools # this will be used in the cert's subjectAltNames
    secretName: cflor-staging-telematicsplatform.tools

